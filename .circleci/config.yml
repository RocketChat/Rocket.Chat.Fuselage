version: 2
jobs:
  publish:
    docker:
      - image: chinello/alpine-chrome:with-node
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Authenticate with registry
          command: echo "//packagecloud.io/armando/node-test-package/npm/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: yarn lerna publish from-package

  build:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum ".circleci/config.yml" }}-{{ checksum "package.json" }}
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum ".circleci/config.yml" }}-{{ checksum "package.json" }}
      - run: yarn lerna run lint --stream
      - run: yarn lerna run build --stream
      - run: yarn lerna run test --stream
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  loki:
    docker:
      - image: chinello/alpine-chrome:with-node
    working_directory: ~/repo
    environment:
      CHROME_PATH: /usr/bin/chromium-browser
    steps:
      - checkout
      - run: yarn
      - run: yarn lerna run build --stream
      - run: yarn lerna run build-storybook --scope @rocket.chat/fuselage --stream
      - run:
          command: |
            cat package.json | sed s/\.docker/.app/ > package.json-new
            mv package.json-new package.json
          working_directory: ~/repo/packages/fuselage
      - run:
          command: yarn run loki:test-ci
          working_directory: ~/repo/packages/fuselage

      - store_artifacts:
          path: ~/repo/packages/fuselage/.loki/difference

  deploy-storybook:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run: .circleci/deploy-storybooks.js

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - loki:
          requires:
            - build
      - deploy-storybook:
          requires:
            - build
          filters:
              branches:
                only: master
      - publish:
          requires:
            - build
