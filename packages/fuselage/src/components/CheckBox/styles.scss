@import '../../helpers/mixins.scss';
@import '../../helpers/theme-var.scss';
@import '../../styles/color-palette.scss';
@import '../../styles/dimensions.scss';
@import '../../styles/typography.scss';

$name: 'rcx-check-box';

$default-theme: (
  'size': var-dimension('input-line-height'),
  'border-width': var-dimension('border-width'),
  'border-radius': var-dimension('border-radius'),
  'label-color': color('dark-800'),
  'label-font-family': font-family('default'),
  'label-font-size': 0.875rem,
  'label-font-weight': 400,
  'label-line-height': var-dimension('input-line-height'),
  'color': color('white'),
  'border-color': color('dark-400'),
  'hover-border-color': color('dark-500'),
  'active-border-color': color('dark-600'),
  'focus-border-color': color('blue-500'),
  'focus-shadow-color': color('blue-100'),
  'disabled-background-color': color('dark-200'),
  'disabled-border-color': color('dark-200'),
  'checked-background-color': color('blue-500'),
  'checked-hover-background-color': color('blue-600'),
  'checked-active-background-color': color('blue-700'),
  'checked-focus-background-color': color('blue-500'),
  'checked-focus-border-color': color('blue-700'),
  'checked-focus-shadow-color': color('blue-100'),
  'checked-disabled-background-color': color('blue-200'),
);

@mixin check-box-colors(
  $state: '',
  $color: null,
  $backgroundColor: null,
  $borderColor: null,
  $hoverBackgroundColor: null,
  $hoverBorderColor: null,
  $activeBackgroundColor: null,
  $activeBorderColor: null,
  $focusBackgroundColor: null,
  $focusBorderColor: null,
  $focusShadowColor: null,
  $disabledBackgroundColor: null,
  $disabledBorderColor: null,
) {
  // stylelint-disable selector-pseudo-class-no-unknown
  &__input#{unquote($state)} + &__fake {
    color: $color;
  }

  &__input:enabled#{unquote($state)} + &__fake {
    border-color: $borderColor;
    background-color: $backgroundColor;
  }

  &__wrapper > &__input:enabled:focus#{unquote($state)} + &__fake,
  &__wrapper:global(.focus) > &__input:enabled#{unquote($state)} + &__fake {
    border-color: $focusBorderColor;
    background-color: $focusBackgroundColor;

    @if $focusShadowColor {
      box-shadow: 0 0 0 6px $focusShadowColor;
    }
  }

  &__wrapper > &__input:enabled:hover#{unquote($state)} + &__fake,
  &__wrapper:global(.hover) > &__input:enabled#{unquote($state)} + &__fake {
    border-color: $hoverBorderColor;
    background-color: $hoverBackgroundColor;
    box-shadow: none;
  }

  &__wrapper > &__input:enabled:active#{unquote($state)} + &__fake,
  &__wrapper:global(.active) > &__input:enabled#{unquote($state)} + &__fake {
    border-color: $activeBorderColor;
    background-color: $activeBackgroundColor;
    box-shadow: none;
  }

  &__input:disabled#{unquote($state)} + &__fake {
    border-color: $disabledBorderColor;
    background-color: $disabledBackgroundColor;
  }
}

@mixin checked-icon {
  &::before,
  &::after {
    visibility: visible;

    opacity: 1;
  }

  &::before {
    width: 12px;
    height: 2px;

    transform: translate(-4px, 2px) rotate(-45deg) translate(6px, 2px);

    border-radius: 1px;
  }

  &::after {
    width: 2px;
    height: 6px;

    transform: translate(-4px, 2px) rotate(-45deg);

    border-radius: 1px;
  }
}

@mixin indeterminate-icon {
  &::before {
    visibility: visible;

    width: 12px;
    height: 2px;

    opacity: 1;
    border-radius: 1px;
  }
}

.rcx-check-box {
  &__wrapper {
    @include reset;
    @include hideable;
    @include disableable;
    @include unselectable;

    position: relative;

    display: inline-flex;

    cursor: pointer;

    align-items: center;
  }

  &__input {
    @include visually-hidden;
  }

  &__fake {
    @include reset;
    position: relative;

    display: flex;

    width: theme-var('size');
    height: theme-var('size');

    transition: all var-dimension('short-transition-duration');

    border: theme-var('border-width') solid;
    border-radius: theme-var('border-radius');

    align-items: center;
    justify-content: center;

    &::before,
    &::after {
      position: absolute;

      display: block;
      visibility: hidden;

      content: '';
      transition: all var-dimension('short-transition-duration');

      opacity: 0;
      background-color: currentColor;
    }
  }

  &__label {
    @include reset;

    margin: 0 0.625rem;

    transition: all var-dimension('short-transition-duration');

    color: theme-var('label-color');

    font-family: theme-var('label-font-family');
    font-size: theme-var('label-font-size');
    font-weight: theme-var('label-font-weight');
    line-height: theme-var('label-line-height');
  }

  &__wrapper > &__input:checked + &__fake {
    @include checked-icon;
  }

  &__wrapper > &__input:indeterminate + &__fake {
    @include indeterminate-icon;
  }

  @include check-box-colors(
    $color: theme-var('color'),
    $borderColor: theme-var('border-color'),
    $hoverBorderColor: theme-var('hover-border-color'),
    $activeBorderColor: theme-var('active-border-color'),
    $focusBorderColor: theme-var('focus-border-color'),
    $focusShadowColor: theme-var('focus-shadow-color'),
    $disabledBackgroundColor: theme-var('disabled-background-color'),
    $disabledBorderColor: theme-var('disabled-border-color'),
  );
  @include check-box-colors(
    $state: ':checked',
    $backgroundColor: theme-var('checked-background-color'),
    $borderColor: theme-var('checked-background-color'),
    $hoverBackgroundColor: theme-var('checked-hover-background-color'),
    $hoverBorderColor: theme-var('checked-hover-background-color'),
    $activeBackgroundColor: theme-var('checked-active-background-color'),
    $activeBorderColor: theme-var('checked-active-background-color'),
    $focusBackgroundColor: theme-var('checked-focus-background-color'),
    $focusBorderColor: theme-var('checked-focus-border-color'),
    $focusShadowColor: theme-var('checked-focus-shadow-color'),
    $disabledBackgroundColor: theme-var('checked-disabled-background-color'),
    $disabledBorderColor: theme-var('checked-disabled-background-color'),
  );
  @include check-box-colors(
    $state: ':indeterminate',
    $backgroundColor: theme-var('checked-background-color'),
    $borderColor: theme-var('checked-background-color'),
    $hoverBackgroundColor: theme-var('checked-hover-background-color'),
    $hoverBorderColor: theme-var('checked-hover-background-color'),
    $activeBackgroundColor: theme-var('checked-active-background-color'),
    $activeBorderColor: theme-var('checked-active-background-color'),
    $focusBackgroundColor: theme-var('checked-focus-background-color'),
    $focusBorderColor: theme-var('checked-focus-border-color'),
    $focusShadowColor: theme-var('checked-focus-shadow-color'),
    $disabledBackgroundColor: theme-var('checked-disabled-background-color'),
    $disabledBorderColor: theme-var('checked-disabled-background-color'),
  );
}
