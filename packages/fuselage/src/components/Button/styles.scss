@mixin button-with-colors(
  $color,
  $background-color,
  $border-color,
  $hover-background-color,
  $hover-border-color,
  $active-background-color,
  $active-border-color,
  $focus-background-color,
  $focus-border-color,
  $focus-shadow-color,
  $disabled-color,
  $disabled-background-color,
  $disabled-border-color,
) {
  color: $color;
  border-color: $border-color;
  background-color: $background-color;

  &.focus,
  &:focus {
    border-color: $focus-border-color;
    background-color: $focus-background-color;
    box-shadow: 0 0 0 to-rem(6) $focus-shadow-color;
  }

  &.hover,
  &:hover {
    border-color: $hover-border-color;
    background-color: $hover-background-color;
    box-shadow: none;
  }

  &.active,
  &:active {
    border-color: $active-border-color;
    background-color: $active-background-color;
    box-shadow: none;
  }

  &.disabled,
  &:disabled {
    color: $disabled-color;
    border-color: $disabled-border-color;
    background-color: $disabled-background-color;
  }
}

%button-secondary-color { // TODO: primitive atomic component
  @include button-with-colors(
    $background-color: $button-colors-secondary-background-color,
    $border-color: $button-colors-secondary-border-color,
    $color: $button-colors-secondary-color,
    $hover-background-color: $button-colors-secondary-hover-background-color,
    $hover-border-color: $button-colors-secondary-hover-border-color,
    $active-background-color: $button-colors-secondary-active-background-color,
    $active-border-color: $button-colors-secondary-active-border-color,
    $focus-background-color: $button-colors-secondary-focus-background-color,
    $focus-border-color: $button-colors-secondary-focus-border-color,
    $focus-shadow-color: $button-colors-secondary-focus-shadow-color,
    $disabled-background-color: $button-colors-secondary-disabled-background-color,
    $disabled-border-color: $button-colors-secondary-disabled-border-color,
    $disabled-color: $button-colors-secondary-disabled-color,
  );
}

.rcx-button {
  @mixin with-rectangular-size($height, $padding-x, $line-height) {
    padding:
      calc((#{ $height } - #{ $line-height }) / 2 - #{ $borders-width-x2 })
      calc(#{ $padding-x } - #{ $borders-width-x2 });
    padding-block: calc((#{ $height } - #{ $line-height }) / 2 - #{ $borders-width-x2 });
    padding-inline: calc(#{ $padding-x } - #{ $borders-width-x2 });
  }

  @mixin with-squared-size($size) {
    width: $size;
    height: $size;
    padding: 0;

    &::before,
    &::after {
      display: inline-block;

      height: 100%;

      content: '';
      vertical-align: middle;
    }
  }

  display: inline-block;

  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  text-decoration: none;

  @include clickable;
  @include with-ellipsing-text;
  @include as-paragraph($bold: true);

  @include with-rectangular-size(
    $height: $sizes-x40,
    $padding-x: $spaces-x16,
    $line-height: $text-styles-p1-line-height,
  );

  @extend %button--secondary;

  &--small {
    @include as-caption($bold: true);

    @include with-rectangular-size(
      $height: $sizes-x32,
      $padding-x: $spaces-x12,
      $line-height: $text-styles-c1-line-height,
    );
  }

  &--square {
    @include with-squared-size(
      $size: $spaces-x40,
    );
  }

  &--small-square {
    @include with-squared-size(
      $size: $spaces-x32,
    );
  }

  &--danger {
    color: $colors-r500;

    &.disabled,
    &:disabled {
      color: $colors-r100;
    }
  }

  &--primary {
    @extend %button--primary;
  }

  &--primary-danger {
    @extend %button--danger;
  }

  &--ghost {
    border-color: transparent;
    background-color: transparent;
  }

  &--ghost-danger {
    color: $colors-r500;
    border-color: transparent;
    background-color: transparent;

    &.disabled,
    &:disabled {
      color: $colors-r100;
    }
  }
}
