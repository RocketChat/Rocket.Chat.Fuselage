@import '../../helpers/mixins.scss';
@import '../../helpers/theme-var.scss';

$unit: 0.5rem;

$width: (
  md: 64.5rem,
);

$columns: (
  md: 16,
);

$name: 'rcx-grid';

$default-theme: (
  'md-width': 64.5rem,
  'md-columns': 16,
);

$directions: row, row-reverse;
$justifications: flex-start, center, flex-end, space-between, space-around, space-evenly;
$itemAlignments: flex-start, center, flex-end, stretch, baseline;

.#{$name} {
  @include reset;
}

.#{$name}--container {
  display: flex;
}

@for $gutter from 0 through 10 {
  .#{$name}--gutter-#{$gutter} {
    margin: 0 (-$gutter * 0.5rem / 2);
  }

  .#{$name}--outsideGutter.#{$name}--gutter-#{$gutter} {
    margin: 0;
    padding: 0 ($gutter * 0.5rem / 2);
  }
}

@each $direction in $directions {
  .#{$name}--direction-#{$direction} {
    flex-direction: $direction;
  }
}

@each $justification in $justifications {
  .#{$name}--justification-#{$justification} {
    justify-content: $justification;
  }
}

@each $itemAlignment in $itemAlignments {
  .#{$name}--itemAlignment-#{$itemAlignment} {
    align-items: $itemAlignment;
  }
}

.#{$name}--item {
  flex-grow: 0;
  flex-shrink: 1;
}

@each $breakpoint in map-keys($width) {
  .#{$name}--#{$breakpoint} {
    @media (min-width: map-get($width, $breakpoint)) {
      flex-basis: 0;
      flex-grow: 1;
    }
  }

  @for $i from 1 through map-get($columns, $breakpoint) {
    .#{$name}--#{$breakpoint}-#{$i} {
      @media (min-width: map-get($width, $breakpoint)) {
        max-width: calc(100% / #{theme-var('#{$breakpoint}-columns')} * #{$i});
        flex-basis: calc(100% / #{theme-var('#{$breakpoint}-columns')} * #{$i});
      }
    }
  }
}

@for $gutter from 0 through 10 {
  .#{$name}--gutter-#{$gutter} > .#{$name}--item {
    padding: $gutter * 0.5rem / 2;
  }
}
