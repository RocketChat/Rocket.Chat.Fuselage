$breakpoint-names: map-keys($breakpoints);

@mixin when-item-is-on-breakpoint($breakpoint-name) {
  @include when-breakpoint($breakpoint-name) {
    @content;
  }

  .rcx-grid--#{$breakpoint-name} > & {
    @content;
  }
}

.rcx-grid {
  @include box;
  display: flex;
  flex-flow: row wrap;

  @each $breakpoint-name in $breakpoint-names {
    @include when-item-is-on-breakpoint($breakpoint-name) {
      margin-block: calc(#{ to-rem(map-get(map-get($breakpoints, $breakpoint-name), gutter-width)) } / -2);
      margin-inline: calc(#{ to-rem(map-get(map-get($breakpoints, $breakpoint-name), gutter-width)) } / -2);
    }
  }
}

.rcx-grid__item {
  @include box;
  flex: 1 1 0;

  @each $breakpoint-name in $breakpoint-names {
    @include when-item-is-on-breakpoint($breakpoint-name) {
      padding-block: calc(#{ to-rem(map-get(map-get($breakpoints, $breakpoint-name), gutter-width)) } / 2);
      padding-inline: calc(#{ to-rem(map-get(map-get($breakpoints, $breakpoint-name), gutter-width)) } / 2);

      $total-columns: map-get(map-get($breakpoints, $breakpoint-name), columns);
      @for $columns from 1 through $total-columns {
        &--#{$breakpoint-name}-#{$columns} {
          max-width: ($columns / $total-columns * 100%);
          flex-basis: ($columns / $total-columns * 100%);
          flex-grow: 0;
        }
      }
    }
  }
}
